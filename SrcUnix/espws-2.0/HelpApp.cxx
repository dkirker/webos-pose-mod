// generated by Fast Light User Interface Designer (fluid) version 1.0008

#include "HelpApp.h"

inline void HelpApp::cb_view__i(HelpView*, void*) {
  if (view_->changed())
{
  index_ ++;

  if (index_ >= 100)
  {
    memcpy(line_, line_ + 10, sizeof(line_[0]) * 90);
    memcpy(file_, file_ + 10, sizeof(file_[0]) * 90);
    index_ -= 10;
  }

  max_ = index_;

  strcpy(file_[index_], view_->filename());
  line_[index_] = view_->topline();

  if (index_ > 0)
    back_->activate();
  else
    back_->deactivate();

  forward_->deactivate();
  window_->label(view_->title());
  location_->value(view_->filename());
}
else if (view_->filename())
{
  strncpy(file_[index_], view_->filename(), 255);
  file_[index_][255] = '\0';
  line_[index_] = view_->topline();
};
}
void HelpApp::cb_view_(HelpView* o, void* v) {
  ((HelpApp*)(o->parent()->user_data()))->cb_view__i(o,v);
}

inline void HelpApp::cb_back__i(Fl_Button*, void*) {
  back();
}
void HelpApp::cb_back_(Fl_Button* o, void* v) {
  ((HelpApp*)(o->parent()->parent()->user_data()))->cb_back__i(o,v);
}

inline void HelpApp::cb_forward__i(Fl_Button*, void*) {
  forward();
}
void HelpApp::cb_forward_(Fl_Button* o, void* v) {
  ((HelpApp*)(o->parent()->parent()->user_data()))->cb_forward__i(o,v);
}

inline void HelpApp::cb_smaller__i(Fl_Button*, void*) {
  if (view_->textsize() > 8)
  view_->textsize(view_->textsize() - 2);

if (view_->textsize() <= 8)
  smaller_->deactivate();
larger_->activate();
}
void HelpApp::cb_smaller_(Fl_Button* o, void* v) {
  ((HelpApp*)(o->parent()->parent()->user_data()))->cb_smaller__i(o,v);
}

inline void HelpApp::cb_larger__i(Fl_Button*, void*) {
  if (view_->textsize() < 18)
  view_->textsize(view_->textsize() + 2);

if (view_->textsize() >= 18)
  larger_->deactivate();
smaller_->activate();
}
void HelpApp::cb_larger_(Fl_Button* o, void* v) {
  ((HelpApp*)(o->parent()->parent()->user_data()))->cb_larger__i(o,v);
}

inline void HelpApp::cb_home__i(Fl_Button*, void*) {
  load(homepage_);
}
void HelpApp::cb_home_(Fl_Button* o, void* v) {
  ((HelpApp*)(o->parent()->parent()->user_data()))->cb_home__i(o,v);
}

#include <FL/Fl_Bitmap.H>
static unsigned char bits_home[] =
"\200\1@: ,\20(\b0\4 \6`\5\240t/T)T)t)\4+\4)\4)\374?";
static Fl_Bitmap bitmap_home(bits_home, 16, 16);

inline void HelpApp::cb_reload__i(Fl_Button*, void*) {
  int top = view_->topline();
view_->load(location_->value());
view_->topline(top);
}
void HelpApp::cb_reload_(Fl_Button* o, void* v) {
  ((HelpApp*)(o->parent()->parent()->user_data()))->cb_reload__i(o,v);
}

static unsigned char bits_reload[] =
"\0\0\340\7\360\17""8\34\30""8\0p\0\370\4p\16 \37\0\16\0\34\30""8\34\360\17\
\340\7\0\0";
static Fl_Bitmap bitmap_reload(bits_reload, 16, 16);

static unsigned char bits_stop[] =
"\340\7\360\17\370\37\374?\376\177\377\377\211\315\335\252\331\312\333\352\
\331\355\377\177\376?\374\37\370\17\360\7";
static Fl_Bitmap bitmap_stop(bits_stop, 16, 16);

inline void HelpApp::cb_New_i(Fl_Menu_*, void*) {
  new HelpApp;
}
void HelpApp::cb_New(Fl_Menu_* o, void* v) {
  ((HelpApp*)(o->parent()->user_data()))->cb_New_i(o,v);
}

inline void HelpApp::cb_Close_i(Fl_Menu_*, void*) {
  window_->hide();
}
void HelpApp::cb_Close(Fl_Menu_* o, void* v) {
  ((HelpApp*)(o->parent()->user_data()))->cb_Close_i(o,v);
}

inline void HelpApp::cb_Set_i(Fl_Menu_*, void*) {
  strcpy(homepage_, location_->value());
save_bookmarks();
}
void HelpApp::cb_Set(Fl_Menu_* o, void* v) {
  ((HelpApp*)(o->parent()->user_data()))->cb_Set_i(o,v);
}

inline void HelpApp::cb_Set1_i(Fl_Menu_*, void*) {
  const char *proxy;

if ((proxy = fl_input("Enter the URL for the proxy server:", proxy_)) != NULL)
{
  strcpy(proxy_, proxy);
  save_bookmarks();
};
}
void HelpApp::cb_Set1(Fl_Menu_* o, void* v) {
  ((HelpApp*)(o->parent()->user_data()))->cb_Set1_i(o,v);
}

inline void HelpApp::cb_E_i(Fl_Menu_*, void*) {
  exit(0);
}
void HelpApp::cb_E(Fl_Menu_* o, void* v) {
  ((HelpApp*)(o->parent()->user_data()))->cb_E_i(o,v);
}

Fl_Menu_Item HelpApp::menu_menubar_[] = {
 {"&File", 0,  0, 0, 64, 0, 0, 14, 0},
 {"&New", 0x4006e,  (Fl_Callback*)HelpApp::cb_New, 0, 0, 0, 0, 14, 0},
 {"&Open...", 0x4006f,  0, 0, 0, 0, 0, 14, 0},
 {"&Close", 0x40077,  (Fl_Callback*)HelpApp::cb_Close, 0, 128, 0, 0, 14, 0},
 {"Set &Home Page", 0,  (Fl_Callback*)HelpApp::cb_Set, 0, 0, 0, 0, 14, 0},
 {"Set &Proxy", 0,  (Fl_Callback*)HelpApp::cb_Set1, 0, 128, 0, 0, 14, 0},
 {"E&xit", 0x40071,  (Fl_Callback*)HelpApp::cb_E, 0, 0, 0, 0, 14, 0},
 {0},
 {"&Options", 0,  0, 0, 64, 0, 0, 14, 0},
 {"&Toolbar", 0,  0, 0, 6, 0, 0, 14, 0},
 {"&Location", 0,  0, 0, 134, 0, 0, 14, 0},
 {0},
 {"&Go", 0,  0, 0, 64, 0, 0, 14, 0},
 {"&Back", 0,  0, 0, 0, 0, 0, 14, 0},
 {"&Forward", 0,  0, 0, 0, 0, 0, 14, 0},
 {"&Home", 0,  0, 0, 0, 0, 0, 14, 0},
 {0},
 {0}
};

inline void HelpApp::cb_location__i(Fl_Input*, void*) {
  load(location_->value());
}
void HelpApp::cb_location_(Fl_Input* o, void* v) {
  ((HelpApp*)(o->parent()->parent()->user_data()))->cb_location__i(o,v);
}

inline void HelpApp::cb_bookmark__i(Fl_Menu_Button*, void*) {
  show_bookmark();
}
void HelpApp::cb_bookmark_(Fl_Menu_Button* o, void* v) {
  ((HelpApp*)(o->parent()->parent()->user_data()))->cb_bookmark__i(o,v);
}

inline void HelpApp::cb_Add_i(Fl_Menu_*, void*) {
  add_bookmark(view_->title(), location_->value());
save_bookmarks();
}
void HelpApp::cb_Add(Fl_Menu_* o, void* v) {
  ((HelpApp*)(o->parent()->parent()->user_data()))->cb_Add_i(o,v);
}

inline void HelpApp::cb_Edit_i(Fl_Menu_*, void*) {
  edit_bookmarks();
}
void HelpApp::cb_Edit(Fl_Menu_* o, void* v) {
  ((HelpApp*)(o->parent()->parent()->user_data()))->cb_Edit_i(o,v);
}

Fl_Menu_Item HelpApp::menu_bookmark_[] = {
 {"Add", 0x40062,  (Fl_Callback*)HelpApp::cb_Add, 0, 0, 0, 0, 14, 0},
 {"Edit...", 0,  (Fl_Callback*)HelpApp::cb_Edit, 0, 128, 0, 0, 14, 0},
 {0}
};

inline void HelpApp::cb_bmList__i(Fl_Browser*, void*) {
  list_cb(Fl::event_clicks());
}
void HelpApp::cb_bmList_(Fl_Browser* o, void* v) {
  ((HelpApp*)(o->parent()->user_data()))->cb_bmList__i(o,v);
}

inline void HelpApp::cb_bmProperties__i(Fl_Menu_*, void*) {
  list_cb(1);
}
void HelpApp::cb_bmProperties_(Fl_Menu_* o, void* v) {
  ((HelpApp*)(o->parent()->user_data()))->cb_bmProperties__i(o,v);
}

inline void HelpApp::cb_Close1_i(Fl_Menu_*, void*) {
  bmWindow_->hide();
}
void HelpApp::cb_Close1(Fl_Menu_* o, void* v) {
  ((HelpApp*)(o->parent()->user_data()))->cb_Close1_i(o,v);
}

Fl_Menu_Item HelpApp::menu_bmMenubar_[] = {
 {"&Edit", 0,  0, 0, 64, 0, 0, 14, 0},
 {"Delete", 0xffff,  0, 0, 0, 0, 0, 14, 0},
 {"Move Up", 0xffbf,  0, 0, 0, 0, 0, 14, 0},
 {"Move Down", 0xffc0,  0, 0, 128, 0, 0, 14, 0},
 {"Properties", 0xff0d,  (Fl_Callback*)HelpApp::cb_bmProperties_, 0, 128, 0, 0, 14, 0},
 {"Close", 0x40077,  (Fl_Callback*)HelpApp::cb_Close1, 0, 0, 0, 0, 14, 0},
 {0},
 {0}
};
Fl_Menu_Item* HelpApp::bmDelete_ = HelpApp::menu_bmMenubar_ + 1;
Fl_Menu_Item* HelpApp::bmMoveUp_ = HelpApp::menu_bmMenubar_ + 2;
Fl_Menu_Item* HelpApp::bmMoveDown_ = HelpApp::menu_bmMenubar_ + 3;
Fl_Menu_Item* HelpApp::bmProperties_ = HelpApp::menu_bmMenubar_ + 4;

inline void HelpApp::cb_Cancel_i(Fl_Button*, void*) {
  propWindow_->hide();
}
void HelpApp::cb_Cancel(Fl_Button* o, void* v) {
  ((HelpApp*)(o->parent()->user_data()))->cb_Cancel_i(o,v);
}

inline void HelpApp::cb_OK_i(Fl_Return_Button*, void*) {
  prop_cb();
propWindow_->hide();
}
void HelpApp::cb_OK(Fl_Return_Button* o, void* v) {
  ((HelpApp*)(o->parent()->user_data()))->cb_OK_i(o,v);
}

HelpApp::HelpApp() {
  Fl_Window* w;
  { Fl_Window* o = window_ = new Fl_Window(530, 385, "Help Application");
    w = o;
    o->user_data((void*)(this));
    { HelpView* o = view_ = new HelpView(0, 95, 530, 270);
      o->box(FL_DOWN_BOX);
      o->callback((Fl_Callback*)cb_view_);
      o->end();
      Fl_Group::current()->resizable(o);
    }
    { Fl_Box* o = status_ = new Fl_Box(0, 365, 530, 20, "Ready.");
      o->box(FL_FLAT_BOX);
      o->labelsize(12);
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    { Fl_Pack* o = toolbar_ = new Fl_Pack(0, 25, 530, 35);
      o->type(1);
      { Fl_Button* o = back_ = new Fl_Button(0, 25, 35, 35, "@-5<-");
        o->box(FL_FLAT_BOX);
        o->down_box(FL_THIN_DOWN_BOX);
        o->shortcut(0xff51);
        o->labeltype(FL_SYMBOL_LABEL);
        o->labelcolor(2);
        o->callback((Fl_Callback*)cb_back_);
      }
      { Fl_Button* o = forward_ = new Fl_Button(35, 25, 35, 35, "@-5->");
        o->box(FL_FLAT_BOX);
        o->down_box(FL_THIN_DOWN_BOX);
        o->shortcut(0xff53);
        o->labeltype(FL_SYMBOL_LABEL);
        o->labelcolor(2);
        o->callback((Fl_Callback*)cb_forward_);
      }
      { Fl_Button* o = smaller_ = new Fl_Button(70, 25, 35, 35, "F");
        o->box(FL_FLAT_BOX);
        o->down_box(FL_THIN_DOWN_BOX);
        o->labelfont(1);
        o->labelsize(10);
        o->callback((Fl_Callback*)cb_smaller_);
      }
      { Fl_Button* o = larger_ = new Fl_Button(105, 25, 35, 35, "F");
        o->box(FL_FLAT_BOX);
        o->down_box(FL_THIN_DOWN_BOX);
        o->labelfont(1);
        o->labelsize(16);
        o->callback((Fl_Callback*)cb_larger_);
      }
      { Fl_Button* o = home_ = new Fl_Button(140, 25, 35, 35);
        o->box(FL_FLAT_BOX);
        o->down_box(FL_THIN_DOWN_BOX);
        bitmap_home.label(o);
        o->labelfont(1);
        o->labelsize(16);
        o->callback((Fl_Callback*)cb_home_);
      }
      { Fl_Button* o = reload_ = new Fl_Button(175, 25, 35, 35);
        o->box(FL_FLAT_BOX);
        o->down_box(FL_THIN_DOWN_BOX);
        o->shortcut(0x40072);
        bitmap_reload.label(o);
        o->labelfont(1);
        o->labelsize(16);
        o->labelcolor(4);
        o->callback((Fl_Callback*)cb_reload_);
      }
      { Fl_Button* o = stop_ = new Fl_Button(210, 25, 35, 35);
        o->box(FL_FLAT_BOX);
        o->down_box(FL_THIN_DOWN_BOX);
        o->shortcut(0xff1b);
        bitmap_stop.label(o);
        o->labelfont(1);
        o->labelsize(16);
        o->labelcolor(1);
        o->deactivate();
      }
      o->end();
    }
    { Fl_Menu_Bar* o = menubar_ = new Fl_Menu_Bar(0, 0, 530, 25);
      o->menu(menu_menubar_);
    }
    { Fl_Group* o = locationbar_ = new Fl_Group(0, 60, 530, 35);
      o->box(FL_UP_FRAME);
      { Fl_Input* o = location_ = new Fl_Input(180, 65, 345, 25, "Location:");
        o->callback((Fl_Callback*)cb_location_);
        o->when(FL_WHEN_ENTER_KEY_ALWAYS);
        Fl_Group::current()->resizable(o);
      }
      { Fl_Menu_Button* o = bookmark_ = new Fl_Menu_Button(5, 65, 105, 25, "Bookmarks");
        o->box(FL_THIN_UP_BOX);
        o->down_box(FL_FLAT_BOX);
        o->callback((Fl_Callback*)cb_bookmark_);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        o->menu(menu_bookmark_);
      }
      o->end();
    }
    o->end();
  }
  { Fl_Window* o = bmWindow_ = new Fl_Window(239, 386, "Bookmarks");
    w = o;
    o->user_data((void*)(this));
    { Fl_Browser* o = bmList_ = new Fl_Browser(0, 25, 240, 360);
      o->type(3);
      o->callback((Fl_Callback*)cb_bmList_);
      Fl_Group::current()->resizable(o);
    }
    { Fl_Menu_Bar* o = bmMenubar_ = new Fl_Menu_Bar(0, 0, 240, 25);
      o->menu(menu_bmMenubar_);
    }
    o->end();
  }
  { Fl_Window* o = propWindow_ = new Fl_Window(385, 111, "Bookmark Properties");
    w = o;
    o->user_data((void*)(this));
    { Fl_Input* o = propTitle_ = new Fl_Input(50, 10, 325, 25, "Title: ");
      o->labelfont(1);
    }
    { Fl_Input* o = propURL_ = new Fl_Input(50, 40, 325, 25, "URL: ");
      o->labelfont(1);
    }
    { Fl_Button* o = new Fl_Button(310, 75, 65, 25, "Cancel");
      o->callback((Fl_Callback*)cb_Cancel);
    }
    { Fl_Return_Button* o = new Fl_Return_Button(240, 75, 65, 25, "OK");
      o->callback((Fl_Callback*)cb_OK);
    }
    o->set_modal();
    o->end();
  }
  back_->deactivate();
forward_->deactivate();

index_ = -1;
max_  = 0;
next_ = first_;
first_ = this;
view_->link(link);
if (!bookmenu_)
  load_bookmarks();
window_->show();
load(homepage_);
}

int HelpApp::h() {
  return (window_->h());
}

void HelpApp::hide() {
  window_->hide();
}

void HelpApp::load(const char *f) {
  view_->set_changed();
view_->load(f);
window_->label(view_->title());
}

void HelpApp::position(int xx, int yy) {
  window_->position(xx, yy);
}

void HelpApp::resize(int xx, int yy, int ww, int hh) {
  window_->resize(xx, yy, ww, hh);
}

void HelpApp::show() {
  window_->show();
}

void HelpApp::textsize(uchar s) {
  view_->textsize(s);

if (s <= 8)
  smaller_->deactivate();
else
  smaller_->activate();

if (s >= 18)
  larger_->deactivate();
else
  larger_->activate();
}

uchar HelpApp::textsize() {
  return (view_->textsize());
}

void HelpApp::topline(const char *n) {
  view_->topline(n);
}

void HelpApp::topline(int n) {
  view_->topline(n);
}

int HelpApp::visible() {
  return (window_->visible());
}

int HelpApp::w() {
  return (window_->w());
}

int HelpApp::x() {
  return (window_->x());
}

int HelpApp::y() {
  return (window_->y());
}
